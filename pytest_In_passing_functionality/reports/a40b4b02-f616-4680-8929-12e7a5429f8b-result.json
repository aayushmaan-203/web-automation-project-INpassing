{"name": "test_personal_details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff676b0cda5+78885]\n\tGetHandleVerifier [0x0x7ff676b0ce00+78976]\n\t(No symbol) [0x0x7ff6768c9bca]\n\t(No symbol) [0x0x7ff676920766]\n\t(No symbol) [0x0x7ff676920a1c]\n\t(No symbol) [0x0x7ff676974467]\n\t(No symbol) [0x0x7ff676948bcf]\n\t(No symbol) [0x0x7ff67697122f]\n\t(No symbol) [0x0x7ff676948963]\n\t(No symbol) [0x0x7ff6769116b1]\n\t(No symbol) [0x0x7ff676912443]\n\tGetHandleVerifier [0x0x7ff676de4eed+3061101]\n\tGetHandleVerifier [0x0x7ff676ddf33d+3037629]\n\tGetHandleVerifier [0x0x7ff676dfe592+3165202]\n\tGetHandleVerifier [0x0x7ff676b2730e+186766]\n\tGetHandleVerifier [0x0x7ff676b2eb3f+217535]\n\tGetHandleVerifier [0x0x7ff676b159b4+114740]\n\tGetHandleVerifier [0x0x7ff676b15b69+115177]\n\tGetHandleVerifier [0x0x7ff676afc368+10728]\n\tBaseThreadInitThunk [0x0x7ff9e027e8d7+23]\n\tRtlUserThreadStart [0x0x7ff9e041c34c+44]", "trace": "self = <pytest_In_passing_functionality.test_home_page_icons.Test_Home_Page_Icon object at 0x00000231A9D1EAD0>\n\n    def test_personal_details(self):\n            wait = WebDriverWait(self.driver, 20, poll_frequency=2,ignored_exceptions=[NoSuchElementException, TimeoutException])  # wait for 10 sec\n>           element1 = wait.until(EC.element_to_be_clickable((By.XPATH,\"(//h4[normalize-space()='Personal Details'])[1]\")))\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_home_page_icons.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a6cbbfbb91a57316e45a9d7b22e3ed3b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000231A9D7A0C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff676b0cda5+78885]\nE       \tGetHandleVerifier [0x0x7ff676b0ce00+78976]\nE       \t(No symbol) [0x0x7ff6768c9bca]\nE       \t(No symbol) [0x0x7ff676920766]\nE       \t(No symbol) [0x0x7ff676920a1c]\nE       \t(No symbol) [0x0x7ff676974467]\nE       \t(No symbol) [0x0x7ff676948bcf]\nE       \t(No symbol) [0x0x7ff67697122f]\nE       \t(No symbol) [0x0x7ff676948963]\nE       \t(No symbol) [0x0x7ff6769116b1]\nE       \t(No symbol) [0x0x7ff676912443]\nE       \tGetHandleVerifier [0x0x7ff676de4eed+3061101]\nE       \tGetHandleVerifier [0x0x7ff676ddf33d+3037629]\nE       \tGetHandleVerifier [0x0x7ff676dfe592+3165202]\nE       \tGetHandleVerifier [0x0x7ff676b2730e+186766]\nE       \tGetHandleVerifier [0x0x7ff676b2eb3f+217535]\nE       \tGetHandleVerifier [0x0x7ff676b159b4+114740]\nE       \tGetHandleVerifier [0x0x7ff676b15b69+115177]\nE       \tGetHandleVerifier [0x0x7ff676afc368+10728]\nE       \tBaseThreadInitThunk [0x0x7ff9e027e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff9e041c34c+44]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "log", "source": "bfd4b9eb-e3ae-4491-9cae-8fbbada3c5b5-attachment.txt", "type": "text/plain"}], "start": 1751391237183, "stop": 1751391259494, "uuid": "26dcb5dc-26ea-4333-9570-d96d4d6f2e3b", "historyId": "020cb05bd7f4cb32dfda5a86d8b6391e", "testCaseId": "020cb05bd7f4cb32dfda5a86d8b6391e", "fullName": "test_home_page_icons.Test_Home_Page_Icon#test_personal_details", "labels": [{"name": "suite", "value": "test_home_page_icons"}, {"name": "subSuite", "value": "Test_Home_Page_Icon"}, {"name": "host", "value": "LENOVO"}, {"name": "thread", "value": "14472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_home_page_icons"}]}